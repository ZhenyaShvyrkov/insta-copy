server:
  port:
    9000

spring:
  application:
    name: auth-server
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/users
    username: postgres
    password: 251084
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    open-in-view: false
    hibernate:
      ddl-auto: none

app:
  security:
    client-settings:
      client-id: insta-client
      client-secret: secret # - will be encoded by passwordEncoder
      redirect-uris:
        - ${FRONTEND_LOGIN_ATTEMPT_URI:http://localhost:8000/login/oauth2/code/insta-client-oidc} # frontend link to redirect client after getting of authorization code
        - ${FRONTEND_SUCCESSFUL_AUTHRIZATION_URI:http://localhost:8000/authorized} # frontend link to redirect client after validating an authorization code and giving a token back
      scopes:
        - api.read
    token-settings:
      expiration-time-in-minutes: 60

eureka:
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: false
    register-with-eureka: true
    enabled: false

logging:
  level:
    #com: TRACE
    org.springframework: TRACE